name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  
  # GitHub Packages Feed settings
  GITHUB_FEED: https://nuget.pkg.github.com/fusionCache-Metris-Plugins/
  GITHUB_USER: JoeShook
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore JoeShook.FusionCache.Playground.Core.sln
    - name: Build
      run: dotnet build JoeShook.FusionCache.Playground.Core.sln --no-restore
    - name: Test
      run: dotnet test JoeShook.FusionCache.Playground.Core.sln --no-build --verbosity normal -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover
    - name: Create Test Coverage Badge for FusionCache.EventCounters.Plugin
      uses: simon-k/dotnet-code-coverage-badge@v1.0.0
      id: create_coverage_badge_EventCounters
      with:
        label: Unit Test Coverage for EventCounters
        color: brightgreen
        path: tests/FusionCache.EventCounters.Plugin.Tests/TestResults/coverage.opencover.xml
        gist-filename: FusionCache.EventCounters.Plugin-code-coverage.json
        gist-id: 141e4a826a0a2f46dad85ccf3213a894
        gist-auth-token: ${{ secrets.GIST_AUTH_TOKEN }}
    - name: Print code coverage FusionCache.EventCounters.Plugin
      run: echo "Code coverage percentage for FusionCache.EventCounters.Plugin ${{steps.create_coverage_badge_EventCounters.outputs.percentage}}%"
    - name: Create Test Coverage Badge for FusionCache.AppMetrics.Plugin
      uses: simon-k/dotnet-code-coverage-badge@v1.0.0
      id: create_coverage_badge_AppMetrics
      with:
        label: Unit Test Coverage for AppMetrics
        color: brightgreen
        path: tests/FusionCache.AppMetrics.Plugin.Tests/TestResults/coverage.opencover.xml
        gist-filename: FusionCache.AppMetrics.Plugin-code-coverage.json
        gist-id: 59e2f3ef3dddc3f86e372c161ea501cc
        gist-auth-token: ${{ secrets.GIST_AUTH_TOKEN }}
    - name: Print code coverage FusionCache.AppMetrics.Plugin
      run: echo "Code coverage percentage for FusionCache.AppMetrics.Plugin ${{steps.create_coverage_badge_AppMetrics.outputs.percentage}}%"
    - name: Pack
      run: |
        dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackageVersion=$GITHUB_RUN_ID src/ZiggyCreatures.FusionCache.Metrics.Core/ZiggyCreatures.FusionCache.Metrics.Core.csproj
        dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackageVersion=$GITHUB_RUN_ID src/JoeShook.FusionCache.EventCounters.Plugin/ZiggyCreatures.FusionCache.EventCounters.Plugin.csproj
        dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackageVersion=$GITHUB_RUN_ID src/JoeShook.FusionCache.AppMetrics.Plugin/ZiggyCreatures.FusionCache.AppMetrics.Plugins.csproj
    - name: Upload Artifact for Metrics.Core
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: ./src/ZiggyCreatures.FusionCache.Metrics.Core/bin/Release/netstandard2.0/*.nupkg
    - name: Upload Artifact for EventCounters.Plugin
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: ./src/JoeShook.FusionCache.EventCounters.Plugin/bin/Release/netstandard2.0/*.nupkg
    - name: Upload Artifact for AppMetrics.Plugins
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: ./src/JoeShook.FusionCache.AppMetrics.Plugin/bin/Release/netstandard2.0/*.nupkg
  # see for inspiration::  https://dusted.codes/github-actions-for-dotnet-core-nuget-packages
  prerelease:
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: nupkg
      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
          done 
